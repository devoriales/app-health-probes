apiVersion: v1
kind: Namespace
metadata:
  name: devoriales-probe-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: critical-app
  namespace: devoriales-probe-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: critical-app
  template:
    metadata:
      labels:
        app: critical-app
    spec:
      containers:
      - name: critical-app
        image: microk8s-vm:30500/critical-app:v1.7
        ports:
        - containerPort: 8080
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - "test -f /tmp/startup-file"
          initialDelaySeconds: 10 # How long to wait before running the probe
          periodSeconds: 10      # How often to run the probe
          timeoutSeconds: 1   # How long to wait for the command to run
          failureThreshold: 6
          successThreshold: 1 # Minimum consecutive successes for the probe to be considered successful
        livenessProbe:
          httpGet:
            path: /liveness-health
            port: 8080
          initialDelaySeconds: 10 # How long to wait before running the probe
          periodSeconds: 5    # How often to run the probe
          timeoutSeconds: 2   # How long to wait for a response from the liveness probe endpoint
          successThreshold: 1 # Default and recommended for liveness
          failureThreshold: 3 # Determines how many times the probe must fail to mark the pod as Unhealthy
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10 # How long to wait before running the probe
          periodSeconds: 5     # How often to run the probe
          timeoutSeconds: 2   # How long to wait for the TCP socket to succeed
          successThreshold: 1 # Typically 1 for readiness to mark the pod as Ready after being successful once
          failureThreshold: 3 # How many times the probe can fail before the pod is marked as Unready
---
apiVersion: v1
kind: Service
metadata:
  name: critical-app
  namespace: devoriales-probe-ns
spec:
  type: NodePort
  selector:
    app: critical-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    nodePort: 30001
